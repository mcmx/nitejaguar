package web

import (
	"github.com/mcmx/nitejaguar/cmd/web/modules"
)

templ ThemeSwitcherScript() {
	{{ handle := templ.NewOnceHandle() }}
	@handle.Once() {
		<script nonce={ templ.GetNonce(ctx) }>
			// Initial theme setup
			document.documentElement.classList.toggle('dark', localStorage.getItem('appTheme') === 'dark');

			document.addEventListener('alpine:init', () => {
				Alpine.data('themeHandler', () => ({
					isDark: localStorage.getItem('appTheme') === 'dark',
					themeClasses() {
						return this.isDark ? 'text-white' : 'bg-white text-black'
					},
					toggleTheme() {
						this.isDark = !this.isDark;
						localStorage.setItem('appTheme', this.isDark ? 'dark' : 'light');
						document.documentElement.classList.toggle('dark', this.isDark);
					}
				}))
			})
		</script>
	}
}

templ Base() {
	<!DOCTYPE html>
	<html lang="en" class="h-full dark">
		<head>
			<meta charset="utf-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0">
			<title>Nite Jaguar</title>
            <link href="/assets/css/output.css" rel="stylesheet"/>
			<!-- Alpine.js -->
			<script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
			<!-- Htmx -->
			<script defer src="/assets/js/htmx.min.js"></script>
			@ThemeSwitcherScript()
		</head>
		<body x-data="themeHandler" x-bind:class="themeClasses">
			@modules.Navbar()
			{ children... }
		</body>
	</html>
}
